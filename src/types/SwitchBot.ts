import type {
  deviceWebhook,
  deviceWebhookContext,
  botWebhookContext,
  curtainWebhookContext,
  curtain3WebhookContext,
  motionSensorWebhookContext,
  contactSensorWebhookContext,
  waterLeakDetectorWebhookContext,
  meterWebhookContext,
  meterPlusWebhookContext,
  meterProWebhookContext,
  meterProCO2WebhookContext,
  outdoorMeterWebhookContext,
  lockWebhookContext,
  lockProWebhookContext,
  indoorCameraWebhookContext,
  panTiltCamWebhookContext,
  colorBulbWebhookContext,
  stripLightWebhookContext,
  plugWebhookContext,
  plugMiniUSWebhookContext,
  plugMiniJPWebhookContext,
  robotVacuumCleanerS1WebhookContext,
  robotVacuumCleanerS1PlusWebhookContext,
  floorCleaningRobotS10WebhookContext,
  ceilingLightWebhookContext,
  ceilingLightProWebhookContext,
  keypadWebhookContext,
  keypadTouchWebhookContext,
  hub2WebhookContext,
  batteryCirculatorFanWebhookContext,
  circulatorFanWebhookContext,
  blindTiltWebhookContext,
  humidifierWebhookContext,
  humidifier2WebhookContext,
  relaySwitch1Context,
  relaySwitch1PMContext,
} from 'node-switchbot';

type AppendDeviceType<Context extends deviceWebhookContext, Device extends string> = Context & {
  deviceType: Device
};

// @see https://github.com/OpenWonderLabs/SwitchBotAPI?tab=readme-ov-file#receive-events-from-webhook
type DeviceContexts = [
  AppendDeviceType<botWebhookContext, 'WoHand'>,
  AppendDeviceType<curtainWebhookContext, 'WoCurtain'>,
  AppendDeviceType<curtain3WebhookContext, 'WoCurtain3'>,
  AppendDeviceType<motionSensorWebhookContext, 'WoPresence'>,
  AppendDeviceType<contactSensorWebhookContext, 'WoContact'>,
  AppendDeviceType<waterLeakDetectorWebhookContext, 'Water Detector'>,
  AppendDeviceType<meterWebhookContext, 'WoMeter'>,
  AppendDeviceType<meterPlusWebhookContext, 'WoMeterPlus'>,
  AppendDeviceType<meterProWebhookContext, 'MeterPro'>,
  AppendDeviceType<meterProCO2WebhookContext, 'MeterPro(CO2)'>,
  AppendDeviceType<outdoorMeterWebhookContext, 'WoIOSensor'>,
  AppendDeviceType<lockWebhookContext, 'WoLock'>,
  AppendDeviceType<lockProWebhookContext, 'WoLockPro'>,
  AppendDeviceType<indoorCameraWebhookContext, 'WoCamera'>,
  AppendDeviceType<panTiltCamWebhookContext, 'WoPanTiltCam'>,
  AppendDeviceType<colorBulbWebhookContext, 'WoBulb'>,
  AppendDeviceType<stripLightWebhookContext, 'WoStrip'>,
  // AppendDeviceType<plugWebhookContext, ''>,
  AppendDeviceType<plugMiniUSWebhookContext, 'WoPlugUS'>,
  AppendDeviceType<plugMiniJPWebhookContext, 'WoPlugJP'>,
  AppendDeviceType<robotVacuumCleanerS1WebhookContext, 'WoSweeper'>,
  AppendDeviceType<robotVacuumCleanerS1PlusWebhookContext, 'WoSweeperPlus'>,
  AppendDeviceType<floorCleaningRobotS10WebhookContext, 'Robot Vacuum Cleaner S10'>,
  AppendDeviceType<ceilingLightWebhookContext, 'WoCeiling'>,
  AppendDeviceType<ceilingLightProWebhookContext, 'WoCeilingPro'>,
  AppendDeviceType<keypadWebhookContext, 'WoKeypad'>,
  AppendDeviceType<keypadTouchWebhookContext, 'WoKeypadTouch'>,
  AppendDeviceType<hub2WebhookContext, 'WoHub2'>,
  AppendDeviceType<batteryCirculatorFanWebhookContext, 'WoFan2'>,
  AppendDeviceType<circulatorFanWebhookContext, 'WoFan2'>,
  // AppendDeviceType<blindTiltWebhookContext, ''>,
  // AppendDeviceType<humidifierWebhookContext, ''>,
  AppendDeviceType<humidifier2WebhookContext, 'Humidifier2'>,
  AppendDeviceType<relaySwitch1Context, 'Relay Switch 1'>,
  AppendDeviceType<relaySwitch1PMContext, 'Relay Switch 1PM'>,
];

export type DeviceWebhook = deviceWebhook & {
  context: DeviceContexts[number];
};
